on:
  push:
name: Release
jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff
      - name: Autoformat with black
        run: |
          black .
      - name: Lint with ruff
        run: |
          ruff check . --fix
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: style fixes by ruff and autoformatting by black"
  make_sdist:
    needs: ["linting"]
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: |
          pip install build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  conda-build:
    name: Building conda package for python
    needs: ["linting"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ${{ fromJSON(vars.PYTHON_VERSIONS)}}
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - uses: actions/checkout@v4
      - name: update submodules
        #       shell: bash -l {0}
        run: |
          git submodule update --init --recursive
      - name: Conda build
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
        shell: bash -l {0}
        run: |
          conda update --all
          conda install -c conda-forge conda-build anaconda-client conda-libmamba-solver -y
          conda build -c conda-forge -c loop3d --output-folder conda conda 
          conda convert -p all conda/linux-64/*.tar.bz2 -f -o conda
          conda install anaconda-client -y
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: conda-${{ matrix.os }}-${{ matrix.python-version }}
          path: conda

  release-please:
    runs-on: ubuntu-latest
    needs: ["linting", "make_sdist", "conda-build"]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v4
        id: release
        with:
          release-type: python
          package-name: loopstructuralvisualisation
          version-file: loopstructuralvisualisation/version.py
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

  upload_to_pypi:
    runs-on: "ubuntu-latest"
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          verbose: true
